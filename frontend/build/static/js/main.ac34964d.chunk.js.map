{"version":3,"sources":["assets/images/spotify_icon.svg","assets/images/youtube_icon.svg","utils/AppRoute.js","utils/ScrollReveal.js","layouts/LayoutDefault.js","utils/SectionProps.js","components/elements/ButtonGroup.js","components/elements/Button.js","components/elements/SongCard.js","components/elements/Dropdown.js","components/sections/Hero.js","views/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppRoute","Component","component","Layout","layout","rest","undefined","props","children","render","ScrollReveal","React","forwardRef","ref","useState","window","innerHeight","viewportHeight","setViewportheight","revealEl","setRevealel","checkComplete","length","document","querySelectorAll","revealElements","i","el","revealDelay","getAttribute","revealOffset","offset","getBoundingClientRect","top","elementIsVisible","closest","classList","contains","setTimeout","add","useImperativeHandle","init","useEffect","addEventListener","handleScroll","handleResize","handleListeners","removeEventListener","throttle","propTypes","PropTypes","func","isRequired","LayoutDefault","className","SectionShared","types","topOuterDivider","bool","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","defaults","SectionProps","invertMobile","invertDesktop","alignTop","imageFill","pushLeft","ButtonGroup","classes","classNames","Button","color","tag","size","loading","wide","wideMobile","disabled","onClick","SongCard","youtubeDebounceTimerId","setYoutubeDebounceTimer","timeout","Card","style","marginTop","overflow","display","flexDirection","minHeight","cardHeight","width","src","img","alt","name","artist","maxHeight","background","CardContent","flexWrap","padding","Typography","fontSize","flexBasis","marginLeft","textAlign","opacity","marginBottom","justifyContent","marginRight","require","console","log","onEmbedContent","category","spotifyId","margin","data","y","fetch","then","res","json","result","youtubeId","Redirect","split","error","clearTimeout","embeddedContent","content","borderRadius","maxWidth","includes","height","frameBorder","allowFullScreen","allow","Dropdown","FormControl","NativeSelect","defaultValue","inputProps","id","paddingTop","paddingBottom","fontFamily","fontWeight","onChange","categories","map","value","key","defaultEmbeddedContent","defaultProps","Hero","outerClasses","innerClasses","songs","Object","keys","sort","reverse","index","indexOf","unshift","splice","setCategory","slice","displayedSongs","setDisplayedSongs","setEmbeddedContent","indexes","categoryIndexes","setCategoryIndexes","handleSetEmbeddedContent","song","Image","preLoadImages","pageLength","cardContainer","useRef","setCardHeight","useLayoutEffect","current","offsetWidth","_","data-reveal-delay","event","target","tmpIndex","Math","max","min","s","n","a","Home","setData","headers","response","App","childRef","location","useLocation","pathname","body","exact","path","isLocalhost","self","__WB_MANIFEST","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","history","createBrowserHistory","ReactDOM","getElementById","URL","process","href","origin","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac34964d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spotify_icon.c6e2d658.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube_icon.8021f244.svg\";","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst AppRoute = ({\n  component: Component,\n  layout: Layout,\n  ...rest\n}) => {\n\n  Layout = (Layout === undefined) ? props => (<>{props.children}</>) : Layout;\n\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )} />\n  );\n}\n\nexport default AppRoute;","import React, { useState, useEffect, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport { throttle } from 'lodash';\n\nconst ScrollReveal = React.forwardRef((props, ref) => {\n\n  const [viewportHeight, setViewportheight] = useState(window.innerHeight); \n  const [revealEl, setRevealel] = useState([]);\n\n  const checkComplete = () => {\n    return revealEl.length <= document.querySelectorAll('[class*=reveal-].is-revealed').length;\n  };\n\n  const elementIsVisible = (el, offset) => {\n    return (el.getBoundingClientRect().top <= viewportHeight - offset);\n  };\n\n  const revealElements = () => {\n    if (checkComplete()) return;\n    for (let i = 0; i < revealEl.length; i++) {\n      let el = revealEl[i];\n      let revealDelay = el.getAttribute('data-reveal-delay');\n      let revealOffset = (el.getAttribute('data-reveal-offset') ? el.getAttribute('data-reveal-offset') : '200');\n      let listenedEl = (el.getAttribute('data-reveal-container') ? el.closest(el.getAttribute('data-reveal-container')) : el);\n      if (elementIsVisible(listenedEl, revealOffset) && !el.classList.contains('is-revealed')) {\n        if (revealDelay && revealDelay !== 0) {\n          setTimeout(function () {\n            el.classList.add('is-revealed');\n          }, revealDelay);\n        } else {\n          el.classList.add('is-revealed');\n        }\n      }\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    init() {\n      setRevealel(document.querySelectorAll('[class*=reveal-]'));\n    }\n  }));  \n\n  useEffect(() => {\n    if (typeof revealEl !== 'undefined' && revealEl.length > 0) {\n      if (!checkComplete()) {\n        window.addEventListener('scroll', handleScroll);\n        window.addEventListener('resize', handleResize);\n      }\n      revealElements();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [revealEl]);\n\n  const handleListeners = () => {\n    if (!checkComplete()) return;\n    window.removeEventListener('scroll', handleScroll);\n    window.removeEventListener('resize', handleResize);\n  };\n\n  const handleScroll = throttle(() => {\n    handleListeners();\n    revealElements();\n  }, 30);\n\n  const handleResize = throttle(() => {\n    setViewportheight(window.innerHeight);\n  }, 30);\n\n  useEffect(() => {\n    handleListeners();\n    revealElements();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewportHeight]);  \n\n  return (\n    <>\n      {props.children()}\n    </>\n  );\n});\n\nScrollReveal.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nexport default ScrollReveal;","import React from 'react';\n\nconst LayoutDefault = ({ children }) => (\n  <>\n    <main className=\"site-content\">\n      {children}\n    </main>\n  </>\n);\n\nexport default LayoutDefault;  ","import PropTypes from 'prop-types';\n\n// Props shared by all sections\nconst SectionShared = {\n  types: {\n    topOuterDivider: PropTypes.bool,\n    bottomOuterDivider: PropTypes.bool,    \n    topDivider: PropTypes.bool,\n    bottomDivider: PropTypes.bool,\n    hasBgColor: PropTypes.bool,\n    invertColor: PropTypes.bool\n  },\n  defaults: {\n    topOuterDivider: false,\n    bottomOuterDivider: false,    \n    topDivider: false,\n    bottomDivider: false,\n    hasBgColor: false,\n    invertColor: false\n  }\n}\n\n// Default section props\nexport const SectionProps = {\n  types: {\n    ...SectionShared.types\n  },\n  defaults: {\n    ...SectionShared.defaults\n  }\n}\n\n// Section split props\nexport const SectionSplitProps = {\n  types: {\n    ...SectionShared.types,\n    invertMobile: PropTypes.bool,\n    invertDesktop: PropTypes.bool,\n    alignTop: PropTypes.bool,\n    imageFill: PropTypes.bool\n  },\n  defaults: {\n    ...SectionShared.defaults,\n    invertMobile: false,\n    invertDesktop: false,\n    alignTop: false,\n    imageFill: false\n  }\n}\n\n// Section tiles props\nexport const SectionTilesProps = {\n  types: {\n    ...SectionShared.types,\n    pushLeft: PropTypes.bool\n  },\n  defaults: {\n    ...SectionShared.defaults,\n    pushLeft: false\n  }\n}","import React from 'react';\nimport classNames from 'classnames';\n\nconst ButtonGroup = ({\n  className,\n  ...props\n}) => {\n\n  const classes = classNames(\n    'button-group',\n    className\n  );\n\n  return (\n    <div\n      {...props}\n      className={classes}\n    />\n  );\n}\n\nexport default ButtonGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n\nconst Button = ({\n  className,\n  tag,\n  color,\n  size,\n  loading,\n  wide,\n  wideMobile,\n  disabled,\n  ...props\n}) => {\n\n  const classes = classNames(\n    'button',\n    color && `button-${color}`,\n    size && `button-${size}`,\n    loading && 'is-loading',\n    wide && 'button-block',\n    wideMobile && 'button-wide-mobile',\n    className\n  );\n\n  return (\n    <button\n    {...props}\n    className={classes}\n    onClick={props.onClick}\n    />\n  );\n}\n\nexport default Button;","import React, { useEffect, useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst SongCard = (props) => {\n\n  // State for preventing spamming of youtube fetching, only allow one concurrent onclick\n  const [youtubeDebounceTimerId, setYoutubeDebounceTimer] = useState(null);\n  function debounce(func, timeout) {\n    return (...args) => {\n      // If a timeout isn't currently happening, then call function immediately\n      if (!youtubeDebounceTimerId) {\n        func(...args);\n      }\n      \n      // End previous timeout\n      clearTimeout(youtubeDebounceTimerId);\n\n      // Set our state to the timeout ID, begin timeout\n      setYoutubeDebounceTimer(\n        setTimeout(() => {\n          // Allow function to be called again at end of timeout\n          setYoutubeDebounceTimer(null);\n        }, timeout));\n    }\n  }\n\n  const handleEmbedYoutube = () => {\n\n    // Used cached result if already viewed youtube video\n    if (props.data.y) {\n      props.onEmbedContent(\n        props.name, \n        props.artist,\n        props.category,\n        \"https://www.youtube.com/embed/\" + props.data.y\n      );\n    }\n    else {\n      // Return first result from Duck Duck Go API filtering on youtube.com\n      fetch(`https://duckduckgo.com/?q=\\\\${props.name} ${props.artist} site:youtube.com&format=json&no_redirect=1&t=jweilhammer-random-song`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          const youtubeId = result.Redirect.split(\"v=\")[1];\n          props.onEmbedContent(\n            props.name, \n            props.artist,\n            props.category,\n            \"https://www.youtube.com/embed/\" + youtubeId\n          );\n          props.data.y = youtubeId;\n        },\n        (error) => {\n          console.log(\"Unable to embed youtube video :-(\")\n          console.log(error);\n        }\n      )\n    }\n  }\n\n  return (\n    <div>\n    <Card\n      // Keep kards separated, allow overflow for images to take up full space\n      style = {{marginTop: '3%', overflow:'visible'}}\n    >\n      <div style={{ display: 'flex', flexDirection: 'row', minHeight: props.cardHeight}}>\n\n        <img\n          width=\"25%\"\n          src={\"https://i.scdn.co/image/\" + props.img}\n          alt={props.name + \" \" + props.artist + \" album cover\"}\n          // Add border less than card so img take up fulls space\n          style={{\n            maxHeight:'100%',\n            // Make image take up space even before it loads\n            background: '#151719',\n            color: '#ECEDED'\n          }}\n        />\n\n        <CardContent \n          style={{display: 'flex', flexWrap: 'wrap', width: '70%', padding:'0', flexDirection: 'volumn',  overflow:'hidden'}}\n        >\n          <Typography\n            // 155px is about when it become a mobile screen\n            style={{fontSize: props.cardHeight < 155 ? '80%' : \"100%\", flexBasis:'100%', marginTop: '2%', marginLeft: '5%', textAlign:'left'}}\n          >\n            {props.name}\n          </Typography>\n  \n          <Typography\n            // 155px is about when it become a mobile screen\n            style={{fontSize: props.cardHeight < 155 ? '70%' : \"90%\", flexBasis:'100%', opacity: '0.6',  marginLeft: '5%', marginBottom: '0%', textAlign:'left'}}\n          >\n            {props.artist}\n          </Typography>\n          <div className=\"container-card-link\" style={{marginTop: 'auto', textAlign: 'left', justifyContent:'left', width:'100%'}}\n          >\n            <img width=\"10%\"\n              style={{marginLeft:'4%', marginRight: \"4%\"}}\n              src={require('../../assets/images/spotify_icon.svg')}\n              alt=\"Spotify Icon\"\n              onClick={() => {\n                console.log(\"SETTING SPOTIFY CONTENT\")\n                props.onEmbedContent(\n                  props.name, \n                  props.artist,\n                  props.category,\n                  \"https://open.spotify.com/embed/track/\" + props.spotifyId + \"?utm_source=generator\"\n                )\n              }}\n            />\n            <img \n              width=\"10%\"\n              margin=\"0px\"\n              src={require('../../assets/images/youtube_icon.svg')}\n              alt=\"Youtube Icon\"\n              // Only let someone fetch youtube results once per second, debounce button onclick\n              onClick={debounce(() => handleEmbedYoutube(), 1000)}\n            />\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n\n    {\n      // Render only if parent's embedded content state exists and matches our card\n      props.embeddedContent.content &&\n      props.embeddedContent.name === props.name &&\n      props.embeddedContent.artist === props.artist &&\n      props.embeddedContent.category === props.category &&\n      <iframe\n        style={{\n          borderRadius:14,\n          marginTop: '2%',\n          maxWidth:'100%',\n          maxHeight:'100%',\n          overflow: 'hidden',\n          width: `${props.embeddedContent.content.includes(\"youtube\") ? \"350px\" : \"350px\"}`,\n          height: `${props.embeddedContent.content.includes(\"youtube\") ? \"197px\" : ''}`\n        }}\n        className={props.embeddedContent.content.includes(\"spotify\") ? 'spotify-embed' : ''}\n        src={props.embeddedContent.content}\n        frameBorder=\"0\"\n        allowFullScreen=\"\"\n        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n        loading=\"lazy\">\n      </iframe>\n\n    }\n\n    </div>\n\n  );\n}\n\n\nexport default SongCard;\n","import * as React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst Dropdown = (props) => {\n\n  return (\n        <FormControl\n        style={{width:'40%', padding: '0', marginBottom:'8px'}}\n        >\n          <NativeSelect\n            defaultValue='Popular'\n            inputProps={{ id: 'uncontrolled-native' }}\n            style={{ \n                width: '100%',\n                background: \"#6163FF\", color: \"#ECEDED\",\n                paddingTop:8, paddingBottom:8,\n                fontSize: '100%', fontFamily: \"Inter, sans-serif\", fontWeight: 600,\n                justifyContent: 'center',\n                textAlign: 'center'\n            }}\n            onChange={props.onChange}\n          >\n          \n          {\n            props.categories.map((category) =>\n              <option style={{background: \"#33363A\"}} value={category} key={category}>\n                {category}\n              </option>\n            )\n          }\n          </NativeSelect>\n        </FormControl>\n  );\n}\n\nexport default Dropdown;","import React, { useEffect, useState, useRef, useLayoutEffect } from 'react';\nimport classNames from 'classnames';\nimport { SectionProps } from '../../utils/SectionProps';\nimport ButtonGroup from '../elements/ButtonGroup';\nimport Button from '../elements/Button';\nimport SongCard from '../elements/SongCard';\nimport Dropdown from '../elements/Dropdown';\n\n// Re-usable constants\nconst pageLength = 4;\nconst defaultEmbeddedContent = {\n  \"song\": null,\n  \"artist\": null,\n  \"category\": null,\n  \"content\": null,\n};\n\n\nconst propTypes = {\n  ...SectionProps.types\n}\n\nconst defaultProps = {\n  ...SectionProps.defaults\n}\n\nconst Hero = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  ...props\n}) => {\n\n\n  const outerClasses = classNames(\n    'hero section center-content',\n    topOuterDivider && 'has-top-divider',\n    bottomOuterDivider && 'has-bottom-divider',\n    hasBgColor && 'has-bg-color',\n    invertColor && 'invert-color',\n    className\n  );\n\n  const innerClasses = classNames(\n    'hero-inner section-inner',\n    topDivider && 'has-top-divider',\n    bottomDivider && 'has-bottom-divider'\n  );\n\n\n\t// Modern Fisher–Yates shuffle for randomizing songs:\n\t// https://en.wikipedia.org/wiki/Fisher-Yates_shuffle\n\tconst shuffleArray = (array) => {\n\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1)); // random from 0 -> i\n\t\t\tconst temp = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t\treturn array;\n\t}\n\n  // STATE\n  const [categories, setCategories] = React.useState(() => {\n    console.log(props.songs);\n\n    // Set preferred order on categories, sort alphabetically for everything else\n    const preferredOrder = [\"Popular\", \"Hip-Hop\", \"Rock\", \"Pop\", \"70s\", \"80s\", \"90s\",\"2000s\", \"2010s\"];\n    const categories = Object.keys(props.songs);\n    categories.sort();\n    for (const category of preferredOrder.reverse()) {\n      console.log(category)\n      const index = categories.indexOf(category);\n      if (index > 0) {\n        categories.unshift(categories.splice(index, 1)[0]);\n      }\n    }\n\n    // Also shuffle songs while we're here\n    for (const category of categories) {\n      props.songs[category] = props.songs[category];\n    }\n    \n\n    return categories;\n  });\n  const [category, setCategory] = React.useState('Popular');\n  const [displayedSongs, setDisplayedSongs] = React.useState(props.songs[category].slice(0, pageLength));\n  const [embeddedContent, setEmbeddedContent] = React.useState(defaultEmbeddedContent);\n  // Initialize category pages to start at 0 index\n  const [categoryIndexes, setCategoryIndexes] = useState(() => {\n    const indexes = {};\n    for (const category of categories) {\n      indexes[category] = 0;\n    }\n\n    return indexes;\n  });\n\n  // Embed content, state is shared with all cards that render embed if they match\n  const handleSetEmbeddedContent = (name, artist, category, content) => {\n    setEmbeddedContent({ name, artist, category, content });\n  }\n\n  // Page songs in current category\n  const handleNextPage = () => {\n    const tmpIndex = {...categoryIndexes};\n    tmpIndex[category] = Math.min(props.songs[category].length - pageLength, categoryIndexes[category] + pageLength);\n    setCategoryIndexes(tmpIndex);\n    setEmbeddedContent(defaultEmbeddedContent);\n  }\n\n  const handlePreviousPage = () => {\n    const tmpIndex = {...categoryIndexes};\n    tmpIndex[category] = Math.max(0, categoryIndexes[category] - pageLength);\n    setCategoryIndexes(tmpIndex);\n    setEmbeddedContent(defaultEmbeddedContent);\n  }\n\n  // Change song category\n  const handleCategoryChange = (event) => {\n    setCategory(event.target.value);\n  }\n\n\n  // Pre-load images to prevent flashing when new pages are loading\n  const preLoadImages = (songs) => {\n    for (const song of songs) {\n      const img = new Image();\n      img.src = \"https://i.scdn.co/image/\" + song.i;\n    }\n  }\n\n  // Re-render when our displayed song list changes (paging or changing categories)\n  useEffect(() => {\n    setDisplayedSongs(props.songs[category].slice(categoryIndexes[category], categoryIndexes[category] + pageLength));\n\n    // Start pre-loading images for the next two pages\n    preLoadImages(props.songs[category].slice(categoryIndexes[category] + pageLength, categoryIndexes[category] + pageLength * 3))\n  }, [category, categoryIndexes])\n\n\n  // Make cards not jump when rendering/loading images\n  // Keep cards a constant height, and not flexing on image size\n  // TODO: Any better way to do this??\n  const cardContainer = useRef(null);\n  const [cardHeight, setCardHeight] = React.useState(() => {\n    console.log(\"SETTING INITIAL CARD HEIGHT\", cardContainer);\n  });\n  useLayoutEffect(() => {\n    if (!cardHeight) {\n      setCardHeight(cardContainer.current.offsetWidth / 4);\n    }\n\n    function debounce(fn, ms) {\n      let timer\n      return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n          timer = null\n          fn.apply(this, arguments)\n        }, ms)\n      };\n    }\n\n    function handleResize() {\n      setCardHeight(cardContainer.current.offsetWidth / 4)\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return _ => {\n      window.removeEventListener('resize', handleResize);\n    }\n  })\n\n  return (\n    <section\n      {...props}\n      className={outerClasses}\n    >\n      <div className=\"container-sm\">\n        <div className={innerClasses}>\n          <div className=\"hero-content\">\n\n            <h1 className=\"mt-0 mb-16\">\n              Random <span className=\"text-color-primary\">Songs</span>\n            </h1>\n\n            <div ref={cardContainer} className=\"container-xs\">\n              <p className=\"m-0 mb-32\" data-reveal-delay=\"400\">\n                Chooose a category to get started:\n              </p>\n\n              <div className=\"\" data-reveal-delay=\"600\">\n\n              <Dropdown\n                categories={categories}\n                onChange={handleCategoryChange}\n              />\n\n                <ButtonGroup>\n                  <Button \n                    color=\"dark\"\n                    tag=\"button\"\n                    onClick={handlePreviousPage}\n                  >\n                    Previous\n                  </Button>\n\n                  <Button \n                  tag=\"button\"\n                  color=\"primary\"\n                  onClick={handleNextPage}\n                  >\n                    Next Page\n                  </Button>\n                </ButtonGroup>\n\n                {\n                // Render songs!\n                displayedSongs\n                .map((song) =>\n                  <SongCard\n                    key={song.s}\n                    img={song.i}\n                    name={song.n}\n                    artist={song.a}\n                    category={category}\n                    spotifyId={song.s}\n                    embeddedContent={embeddedContent}\n                    onEmbedContent={handleSetEmbeddedContent}\n                    cardHeight={cardHeight}\n                    data={song}\n                  />\n                )\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\n\nexport default Hero;","import React, { useEffect, useState } from 'react';\n\n// import sections\nimport Hero from '../components/sections/Hero';\n\nconst Home = () => {\n\n  // Fetch songs from public static assets on initialization\n  const [data, setData] = useState(null);\n  const getData = () => {\n    fetch('songs.json', {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      setData(data);\n    });\n  }\n  useEffect(()=>{\n    getData()\n  }, [])\n\n  return (\n    <>\n      {\n        data && \n        <Hero\n        className=\"illustration-section-01\"\n        songs={data}\n        />\n      }\n\n    </>\n  );\n}\n\nexport default Home;","import React, { useRef, useEffect } from 'react';\nimport { useLocation, Switch } from 'react-router-dom';\nimport AppRoute from './utils/AppRoute';\nimport ScrollReveal from './utils/ScrollReveal';\nimport ReactGA from 'react-ga';\n\n// Layouts\nimport LayoutDefault from './layouts/LayoutDefault';\n\n// Views \nimport Home from './views/Home';\n\nconst App = () => {\n\n  const childRef = useRef();\n  let location = useLocation();\n\n  useEffect(() => {\n    const page = location.pathname;\n    document.body.classList.add('is-loaded')\n    childRef.current.init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n\n  return (\n    <ScrollReveal\n      ref={childRef}\n      children={() => (\n        <Switch>\n          <AppRoute exact path=\"/\" component={Home} layout={LayoutDefault} />\n        </Switch>\n      )} />\n  );\n}\n\nexport default App;","// eslint-disable-next-line no-restricted-globals\nconst ignored = self.__WB_MANIFEST;\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//import './App.css';\nimport './assets/scss/style.scss';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}